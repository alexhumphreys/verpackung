name: Ubuntu
on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

env:
  SCHEME: scheme

jobs:
  build-idris2-with-api:
    runs-on: ubuntu-latest
    env:
      IDRIS2_CG: chez
      IDRIS2_TESTS_CG: chez
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout Idris2
        uses: actions/checkout@v2
        with:
          repository: idris-lang/Idris2
          path: "./Idris2"
      - name: Get Idris2 commit
        id: get-idris2-commit
        run: echo "idris2-commit=$(git rev-parse @:./Idris2)" >> $GITHUB_ENV
      - name: Cache Idris2 with API
        id: cache-idris2-with-api
        uses: actions/cache@v2
        with:
          path: ~/.idris2/
          key: ${{ env.idris2-commit }}-idris2-with-api
      - name: Install build dependencies
        if: steps.cache-idris2-with-api.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install -y chezscheme
          echo "$HOME/.idris2/bin" >> $GITHUB_PATH
      - name: Build Idris2 with API
        if: steps.cache-idris2-with-api.outputs.cache-hit != 'true'
        working-directory: Idris2
        run: |
          make bootstrap && make install
          make clean
          make all && make install
          make install-api

      - name: Artifact Idris2 with API
        uses: actions/upload-artifact@v2
        with:
          name: installed-idris2-with-api
          path: ~/.idris2/
          retention-days: 1
  build:
    runs-on: ubuntu-latest
    needs: build-idris2-with-api
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout Idris2
        uses: actions/checkout@v2
        with:
          repository: alexhumphreys/idrall
          path: "./idrall"
      - name: Download Idris2 with API Artifact
        uses: actions/download-artifact@v2
        with:
          name: installed-idris2-with-api
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          sudo apt-get install -y chezscheme
          echo "$HOME/.idris2/bin" >> $GITHUB_PATH
          chmod +x $HOME/.idris2/bin/idris2 $HOME/.idris2/bin/idris2_app/*
      - name: Install json-to-dhall
        run: |
          wget https://github.com/dhall-lang/dhall-haskell/releases/download/1.40.1/dhall-json-1.7.8-x86_64-linux.tar.bz2
          tar -xvf dhall-json-1.7.8-x86_64-linux.tar.bz2
      - name: Build idrall dependency
        run: |
          cd idrall && make build && cd ..
          mkdir -p ./depends/idrall-0
          cp -r idrall/build/ttc/* ./depends/idrall-0
      - name: Build
        run: |
          make build
        shell: bash
      - name: Build the package-set
        run: |
          make run-executable
      - name: make dhall package-set
        run: |
          ./bin/json-to-dhall --file "./package-set/`date +%Y%m%d`/passing.json" > "./package-set/`date +%Y%m%d`/passing.dhall"
          ./bin/json-to-dhall --file "./package-set/`date +%Y%m%d`/failing.json" > "./package-set/`date +%Y%m%d`/failing.dhall"
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: create commit message
        run: |
          COMMIT_MESSAGE=$(cat << EOF
          [skip ci] new package set

          $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
          EOF
          )
          echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
          echo "$COMMIT_MESSAGE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        id: my_string
      - name: commit
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          git status
          git diff
          git add package-set
          git status
          echo "${{ env.COMMIT_MESSAGE }}" | git commit -F - || true # this can fail when there's no changes
          git push origin main
